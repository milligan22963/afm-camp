source ${SNAP}/config/common.conf

export MARIADB_PIDFILE=${SNAP_PID_AREA}/maria.pid
export MARIADB_SOCKET=${SNAP_SOCKET_AREA}/maria.sock
export USER_PASSWORD_FILE=${SNAP_MARIA_AREA}/user_password
export MARIADB_SETUP_LOCKFILE=${SNAP_LOCK_AREA}/maria-setup.lock
export MARIADB_CFG_FILE=${SNAP}/config/mariadb.ini
export MARIADB_SOURCE=${SNAP_MARIA_AREA}
export MARIADB_DATA_SOURCE=${SNAP_MARIA_DATA_AREA}
export ROOT_INI_FILE=${SNAP_MARIA_AREA}/root.ini
export CONFIG_ERROR_FILE=${SNAP_DATA}/maria-config.err
export DATABASE_NAME="camp"
export DEFAULT_PASSWORD="default-camp-password"

export BIN_SOURCE=${SNAP}/usr/bin

PATH="/sbin:/usr/sbin:/bin:/usr/bin:$BIN_SOURCE"
export PATH

export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$SNAP/lib/x86_64-linux-gnu:$SNAP/usr/lib/x86_64-linux-gnu:$SNAP/usr/lib/x86_64-linux-gnu/mariadb19"

dump_config()
{
    echo "Maria source: $MARIADB_SOURCE" >> $1
    echo "Maria Data source: $MARIADB_DATA_SOURCE" >> $1
    echo "Maria PID file: $MARIADB_PIDFILE" >> $1
    echo "Maria Socket file: $MARIADB_SOCKET" >> $1
    echo "Maria config file: $MARIADB_CFG_FILE" >> $1
}

run_sql_command()
{
    if [ -n "$1" ]; then
        $BIN_SOURCE/mariadb --defaults-file="$ROOT_INI_FILE" -e "$1"
    else
        echo "Failed to execute empty command" >> $CONFIG_ERROR_FILE
    fi
}

# This will set up and perform the typical
# secure installation items
configure_mariadb()
{
    ROOT_PWD="$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-64};)"

    # Set the password for the remainder of the commands
    echo "password=$ROOT_PWD" >> "$ROOT_INI_FILE"

    $BIN_SOURCE/mariadb --defaults-file="$ROOT_INI_FILE" -e "ALTER USER 'root'@'localhost' IDENTIFIED BY '$ROOT_PWD'"

    CAMP_USER="camp"

    # Get rid non local root access
    run_sql_command "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')"

    # Remove anonymous users
    run_sql_command "DELETE FROM mysql.user WHERE User=''"

    # Drop test database and remove privileges
    run_sql_command "DROP DATABASE IF EXISTS test"
    run_sql_command "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'"

    # Create the desired user with the given password
    run_sql_command "CREATE USER '$CAMP_USER'@'localhost' IDENTIFIED BY '$DEFAULT_PASSWORD'"

    # Allow the desired user to create datbases, tables, etc
    run_sql_command "GRANT ALL PRIVILEGES ON *.* TO '$CAMP_USER'@'localhost' IDENTIFIED BY '$DEFAULT_PASSWORD'"

    # Reload the privileges
    run_sql_command "FLUSH PRIVILEGES"    
}
